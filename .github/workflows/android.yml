name: CI

on:
  push:
    branches: ['appium']
  pull_request:
    branches: ['appium']
  workflow_dispatch:

jobs:
  Android:
    runs-on: macos-12
    strategy:
      fail-fast: false
      matrix:
        variant: ['debug', 'release']
    steps:
      - name: Checkout Git repository
        uses: actions/checkout@v3

      # - name: Cache node_modules
      #   uses: actions/cache@v3
      #   with:
      #     path: ./node_modules
      #     key: ${{ hashFiles('./yarn.lock') }}

      - name: Install node_modules
        run: yarn install --frozen-lockfile

      - name: Lint with Prettier
        run: yarn lint:prettier

      - name: Lint with ESLint
        run: yarn lint:eslint

      - name: Check types
        run: yarn types:check

      - name: Setup Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      # - name: Cache Gradle
      #   uses: gradle/gradle-build-action@v2

      - name: Create Android emulator
        run: |
          # brew install intel-haxm
          # Install AVD files
          echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install 'system-images;android-27;default;x86_64'
          echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
          
          # Create emulator
          $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n Pixel_API_29_AOSP -d pixel --package 'system-images;android-27;default;x86_64'
          $ANDROID_HOME/emulator/emulator -list-avds
          
      - name: Start Android emulator
        run: |
          echo "Starting emulator and waiting for boot to complete...."
          ls -la $ANDROID_HOME/emulator
          nohup $ANDROID_HOME/tools/emulator -avd Pixel_API_29_AOSP -gpu host -no-audio -no-boot-anim -camera-back none -camera-front none -qemu -m 2048 2>&1 &
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do echo "wait..."; sleep 1; done; input keyevent 82'
          echo "Emulator has finished booting"
          $ANDROID_HOME/platform-tools/adb devices
          sleep 30

      - name: Launch Metro bundler
        if: ${{ matrix.variant == 'debug' }}
        run: yarn start &

      - name: Build Android app
        run: yarn build:android:${{ matrix.variant }}

      - name: Run Appium server
        run: |
          yarn appium | tee appium.log &
          until $(curl --output /dev/null --silent --head --fail http://127.0.0.1:4723/wd/hub/sessions); do
            sleep 5
          done

      - name: Run Android E2E tests
        run: yarn test:e2e:android:${{ matrix.variant }}

      - name: Upload Appium logs
        uses: actions/upload-artifact@v3
        with:
          name: appium.log
          path: appium.log
