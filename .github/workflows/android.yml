name: CI

on:
  push:
    branches: ['appium']
  pull_request:
    branches: ['appium']
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-12
    env:
      api-level: 29
    steps: 
      - uses: actions/checkout@v3

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ hashFiles('./yarn.lock') }}

      - name: Install node_modules
        run: yarn install --frozen-lockfile

      - name: Setup Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      # - name: Cache Gradle
      #   uses: gradle/gradle-build-action@v2
        
      # - name: Cache AVD
      #   uses: actions/cache@v3
      #   id: avd-cache
      #   with:
      #     path: |
      #       ~/.android/avd/*
      #       ~/.android/adb*
      #     key: avd-api-${{ env.api-level }}-v9

      # - name: Create AVD and generate snapshot for caching
      #   if: steps.avd-cache.outputs.cache-hit != 'true'
      #   uses: reactivecircus/android-emulator-runner@v2
      #   with:
      #     api-level: ${{ env.api-level }}
      #     force-avd-creation: false
      #     emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
      #     script: echo "Generated AVD snapshot for caching."

      - name: Launch Metro bundler
        run: yarn start &

      # - name: Build Android app
      #   uses: reactivecircus/android-emulator-runner@v2
      #   with:
      #     api-level: ${{ env.api-level }}
      #     force-avd-creation: false
      #     emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
      #     script: yarn build:android:debug

      - name: Run Appium server
        run: |
          yarn appium &
          until $(curl --output /dev/null --silent --head --fail http://127.0.0.1:4723/wd/hub/sessions); do
            sleep 5
          done

      - name: Copy app
        run: mkdir -p ./android/app/build/outputs/apk/debug && cp app-debug.apk ./android/app/build/outputs/apk/debug/app-debug.apk

      - name: Run Android E2E tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ env.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -noaudio -no-boot-anim -camera-back none
          script: yarn test:e2e:android:debug
